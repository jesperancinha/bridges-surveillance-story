<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jesperancinha.logistics</groupId>
    <artifactId>bridge-logistics</artifactId>
    <version>2.0.0-SNAPSHOT</version>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jesperancinha.plugins</groupId>
                <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                <version>${omni-coveragereporter-maven-plugin.version}</version>
                <configuration>
                    <fetchBranchNameFromEnv>true</fetchBranchNameFromEnv>
                    <useCoverallsCount>false</useCoverallsCount>
                    <extraSourceFolders>
                        <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt</param>
                        <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap</param>
                        <param>${project.basedir}/bl-simulation-data</param>
                        <param>${project.basedir}/bl-demo-server</param>
                        <param>${project.basedir}</param>
                    </extraSourceFolders>
                    <extraReportFolders>
                        <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt/coverage</param>
                        <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap/coverage</param>
                        <param>${project.basedir}</param>
                    </extraReportFolders>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>lcov</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jesperancinha.plugins</groupId>
                        <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                        <version>${omni-coveragereporter-maven-plugin.version}</version>
                        <configuration>
                            <useCoverallsCount>false</useCoverallsCount>
                            <extraSourceFolders>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt</param>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap</param>
                                <param>${project.basedir}/bl-simulation-data</param>
                                <param>${project.basedir}/bl-demo-server</param>
                                <param>${project.basedir}</param>
                            </extraSourceFolders>
                            <extraReportFolders>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt/coverage</param>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap/coverage</param>
                                <param>${project.basedir}</param>
                            </extraReportFolders>
                            <reportRejectList>
                                <param>clover.xml</param>
                            </reportRejectList>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>clover</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jesperancinha.plugins</groupId>
                        <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                        <version>${omni-coveragereporter-maven-plugin.version}</version>
                        <configuration>
                            <useCoverallsCount>false</useCoverallsCount>
                            <extraSourceFolders>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt</param>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap</param>
                                <param>${project.basedir}/bl-simulation-data</param>
                                <param>${project.basedir}/bl-demo-server</param>
                                <param>${project.basedir}</param>
                            </extraSourceFolders>
                            <extraReportFolders>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt/coverage</param>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap/coverage</param>
                                <param>${project.basedir}</param>
                            </extraReportFolders>
                            <reportRejectList>
                                <param>lcov.info</param>
                            </reportRejectList>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <packaging>pom</packaging>
    <name>Bridge Logistics Parent</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.version>3.14.0</maven.compiler.version>
        <maven-surefire-plugin.version>3.5.3</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.5.3</maven-failsafe-plugin.version>
        <maven-war-plugin.version>3.2.3</maven-war-plugin.version>
        <kotlin.version>2.2.20</kotlin.version>

        <spring-boot-starter-parent.version>3.4.1</spring-boot-starter-parent.version>
        <spring-rabbit-test.version>3.2.1</spring-rabbit-test.version>

        <activemq.version>6.1.7</activemq.version>
        <amqp-client.version>5.7.1</amqp-client.version>

        <combinatoricslib3.version>3.4.0</combinatoricslib3.version>
        <javaee-api.version>8.0.1</javaee-api.version>

        <kotest.version>5.9.1</kotest.version>
        <springmockk.version>4.0.2</springmockk.version>
        <kotest-extensions-spring.version>1.3.0</kotest-extensions-spring.version>
        <mockk.version>1.14.5</mockk.version>

        <failOnMissingWebXml>false</failOnMissingWebXml>

        <arquillian-bom.version>1.5.0.Final</arquillian-bom.version>
        <commons-io.version>1.3.2</commons-io.version>

        <jacoco-maven-plugin.version>0.8.13</jacoco-maven-plugin.version>
        <jaxb-api.version>2.3.1</jaxb-api.version>

        <h2.version>2.3.232</h2.version>
        <gson.version>2.13.1</gson.version>
        <build-helper-maven-plugin.version>3.6.1</build-helper-maven-plugin.version>
        <testcontainers.version>1.21.3</testcontainers.version>

        <maven-assembly-plugin.version>3.5.0</maven-assembly-plugin.version>

        <omni-coveragereporter-maven-plugin.version>0.4.5</omni-coveragereporter-maven-plugin.version>

        <!-- Swagger -->
        <springdoc-openapi-starter-webmvc-ui.version>2.7.0</springdoc-openapi-starter-webmvc-ui.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jesperancinha.logistics</groupId>
                <artifactId>bl-domain-repository</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot-starter-parent.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${spring-boot-starter-parent.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.amqp</groupId>
                <artifactId>spring-rabbit-test</artifactId>
                <version>${spring-rabbit-test.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot-starter-parent.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-client</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-broker</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-kahadb-store</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>${javaee-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.dpaukov</groupId>
                <artifactId>combinatoricslib3</artifactId>
                <version>${combinatoricslib3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>io.mockk</groupId>
                <artifactId>mockk</artifactId>
                <version>${mockk.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest.extensions</groupId>
                <artifactId>kotest-extensions-spring</artifactId>
                <version>${kotest-extensions-spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-runner-junit5-jvm</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-framework-api-jvm</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-runner-junit5</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-assertions-core-jvm</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.ninja-squad</groupId>
                <artifactId>springmockk</artifactId>
                <version>${springmockk.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>jdbc</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>bl-central-server</module>
    </modules>
</project>
